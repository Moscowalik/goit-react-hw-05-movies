{"version":3,"file":"static/js/705.899c42e6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/components/NavInMovieDetailsPage/NavInMovieDetailsPage.module.css?7bb3","components/NavInMovieDetailsPage/NavInMovieDetailsPage.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"innerContainer\":\"MovieDetails_innerContainer__-d9JE\",\"currentMoviePoster\":\"MovieDetails_currentMoviePoster__sGmUe\",\"descriptionWrapper\":\"MovieDetails_descriptionWrapper__ZPlTD\",\"currentMovieTitle\":\"MovieDetails_currentMovieTitle__WdTOE\",\"currentMovieRelease\":\"MovieDetails_currentMovieRelease__6InCD\",\"currentMoviePopularity\":\"MovieDetails_currentMoviePopularity__yztmN\",\"currentMovieOverview\":\"MovieDetails_currentMovieOverview__r6N6A\",\"currentMovieGenres\":\"MovieDetails_currentMovieGenres__3cf7t\",\"currentMovieGenreItem\":\"MovieDetails_currentMovieGenreItem__oN0OG\"};","import PropTypes from 'prop-types';\nimport styles from './MovieDetails.module.css';\nimport outOfPoster from '../../images/outOfPoster.jpg';\nconst MovieDetails = ({\n  poster,\n  title,\n  releaseDate,\n  overview,\n  popularity,\n  genres,\n}) => {\n  return (\n    <div className={styles.innerContainer}>\n      <>\n        {poster ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster}`}\n            alt={title}\n            className={styles.currentMoviePoster}\n          />\n        ) : (\n          <img\n            src={outOfPoster}\n            alt={title}\n            className={styles.currentMoviePoster}\n          />\n        )}\n      </>\n      <div className={styles.descriptionWrapper}>\n        <h2 className={styles.currentMovieTitle}>{title}</h2>\n        <p className={styles.currentMovieRelease}>\n          Release date: {releaseDate}\n        </p>\n        <p className={styles.currentMovieOverview}>Overview: {overview}</p>\n        <p className={styles.currentMoviePopularity}>\n          User Score: {popularity}\n        </p>\n        <ul className={styles.currentMovieGenres}>\n          Ganres:\n          {genres.map(genre => (\n            <li key={genre.id} className={styles.currentMovieGenreItem}>\n              {genre.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  poster: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  releaseDate: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  popularity: PropTypes.number.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"NavInMovieDetailsPage_link__WhDo5\",\"activeLink\":\"NavInMovieDetailsPage_activeLink__97jY4 NavInMovieDetailsPage_link__WhDo5\",\"additionalInformationTitle\":\"NavInMovieDetailsPage_additionalInformationTitle__TTpIC\"};","import { NavLink, Outlet } from 'react-router-dom';\nimport styles from './NavInMovieDetailsPage.module.css';\n\nconst NavInMovieDetailsPage = () => {\n  const setActive = ({ isActive }) =>\n    isActive ? styles.activeLink : styles.link;\n  return (\n    <div className={styles.more}>\n      <h2 className={styles.additionalInformationTitle}>\n        Additional Information\n      </h2>\n      <NavLink to=\"cast\" className={setActive}>\n        <span>Cast</span>\n      </NavLink>\n      <NavLink to=\"reviews\" className={setActive}>\n        <span>Reviews</span>\n      </NavLink>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default NavInMovieDetailsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"goBackBtn\":\"MovieDetailsPage_goBackBtn__HFgJA\",\"currentMovieWrapper\":\"MovieDetailsPage_currentMovieWrapper__3srd2\"};","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport * as moviesApi from 'services/movies-api';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport NavInMovieDetailsPage from '../../components/NavInMovieDetailsPage/NavInMovieDetailsPage';\nimport styles from './MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [currentMovie, setCurrentMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const currentLocation = useRef(location);\n  const navigate = useNavigate();\n  const goBack = () => {\n    navigate(currentLocation?.current?.state?.from ?? '/');\n  };\n  useEffect(() => {\n    moviesApi\n      .getCurrentFilm(movieId)\n      .then(response => setCurrentMovie(response))\n      .catch(error => {\n        setError(error);\n      });\n  }, [movieId]);\n  return (\n    <>\n      {currentMovie && (\n        <>\n          <div className={styles.currentMovieWrapper}>\n            <button className={styles.goBackBtn} onClick={goBack}>\n              Go back\n            </button>\n            <MovieDetails\n              poster={currentMovie.poster_path}\n              title={currentMovie.original_title}\n              releaseDate={currentMovie.release_date}\n              overview={currentMovie.overview}\n              popularity={currentMovie.popularity}\n              genres={currentMovie.genres}\n            />\n            {error && <h2>Sorry, something went wrong: {error.message}</h2>}\n            <NavInMovieDetailsPage />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=221ed015def0321f18a85f3fc7b4d6fa';\nasync function fetchWithErrorHandlling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Page not found :('));\n}\nexport function getTrendingFilms(currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/trending/movie/day?${API_KEY}&page=${currentPage}`,\n  );\n}\nexport function getCurrentFilm(movieId) {\n  return fetchWithErrorHandlling(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n}\nexport function getCurrentFilmCredits(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`,\n  );\n}\nexport function getReviews(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}`,\n  );\n}\nexport function getSearchFilm(value, currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${value}&page=${currentPage}&include_adult=false`,\n  );\n}\n"],"names":["poster","title","releaseDate","overview","popularity","genres","className","styles","src","alt","outOfPoster","map","genre","name","id","setActive","isActive","to","MovieDetailsPage","movieId","useParams","useState","currentMovie","setCurrentMovie","error","setError","location","useLocation","currentLocation","useRef","navigate","useNavigate","useEffect","moviesApi","then","response","catch","onClick","current","state","from","poster_path","original_title","release_date","message","BASE_URL","API_KEY","fetchWithErrorHandlling","url","config","fetch","ok","json","Promise","reject","Error","getTrendingFilms","currentPage","getCurrentFilm","getCurrentFilmCredits","getReviews","getSearchFilm","value"],"sourceRoot":""}