{"version":3,"file":"static/js/722.4c7037d0.chunk.js","mappings":"0NACA,EAA2B,2BAA3B,EAAwE,kCAAxE,EAAqH,2BAArH,EAA0J,0B,SC8B1J,EA5BiB,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACjC,OACE,gBAAIC,UAAWC,EAAf,UACGH,GACC,gBACEI,IAAG,yCAAoCJ,GACvCK,IAAI,QACJH,UAAWC,KAGb,gBACEC,IAAKE,EACLD,IAAI,QACJH,UAAWC,KAGf,iBAAKD,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,mBAAsCJ,EAAtC,QACA,uCAAeE,YCpBvB,EAAuB,uBAAvB,EAAsD,wBC+BtD,EA5BiB,SAAC,GAAiB,IAAfM,EAAc,EAAdA,QAClB,OACE,eAAIL,UAAWC,EAAf,SACGI,EAAQC,OAAS,EAChBD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMY,EAAb,EAAaA,aAAcV,EAA3B,EAA2BA,UAA3B,OACV,SAAC,EAAD,CAEES,GAAIA,EACJX,KAAMA,EACNC,QAASW,EACTV,UAAWA,GAJNS,OAQT,cAAGR,UAAWC,EAAd,6C,SCbO,SAASS,IACtB,IAAMC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAUC,OAAOH,EAAeI,SACtC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOX,EAAP,KAAgBY,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAOA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACyBR,GACtBS,MAAK,SAAAC,GAAQ,OAAIN,EAAWM,EAASC,SACrCC,OAAM,SAAAP,GAAK,OAAIC,EAASD,QAC1B,CAACL,KAEF,iCACE,SAAC,EAAD,CAAUR,QAASA,IAClBa,IAAS,0DAAkCA,EAAMQ,gB,oLCnBlDC,EAAW,+BACXC,EAAU,2CAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAuCC,EAAvC,+BAA6C,GAAIC,EAAjD,+BAA0D,GAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQR,EADR,QAEkBU,GAFlB,iCAGYV,EAASW,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,0BAJ/B,2GAMO,SAASC,EAAiBC,GAC/B,OAAOV,EAAwB,GAAD,OACzBF,EADyB,+BACMC,EADN,iBACsBW,IAG/C,SAASC,EAAezB,GAC7B,OAAOc,EAAwB,GAAD,OAAIF,EAAJ,kBAAsBZ,EAAtB,YAAiCa,IAE1D,SAASa,EAAsB1B,GACpC,OAAOc,EAAwB,GAAD,OACzBF,EADyB,kBACPZ,EADO,oBACYa,IAGrC,SAASc,EAAW3B,GACzB,OAAOc,EAAwB,GAAD,OACzBF,EADyB,kBACPZ,EADO,oBACYa,IAGrC,SAASe,EAAcC,EAAOL,GACnC,OAAOV,EAAwB,GAAD,OACzBF,EADyB,yBACAC,EADA,iCACgCgB,EADhC,iBAC8CL,EAD9C,2B","sources":["webpack://goit-react-hw-05-movies/./src/components/CastList/CastItem/CastItem.module.css?59c5","components/CastList/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/components/CastList/CastList.module.css?59ac","components/CastList/CastList.jsx","pages/Cast/Cast.jsx","services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"CastItem_castItem__WWbTv\",\"castDescription\":\"CastItem_castDescription__J8cGq\",\"castName\":\"CastItem_castName__WtKCv\",\"castImg\":\"CastItem_castImg__AUnPp\"};","import PropTypes from 'prop-types';\nimport defaultImgActor from '../../../images/defaultImgActor.png';\nimport styles from './CastItem.module.css';\nconst CastItem = ({ name, profile, character }) => {\n  return (\n    <li className={styles.castItem}>\n      {profile ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w500${profile}`}\n          alt=\"actor\"\n          className={styles.castImg}\n        />\n      ) : (\n        <img\n          src={defaultImgActor}\n          alt=\"actor\"\n          className={styles.castImg}\n        />\n      )}\n      <div className={styles.castDescription}>\n        <p className={styles.castName}>Name: {name} </p>\n        <p>Character: {character}</p>\n      </div>\n    </li>\n  );\n};\nCastItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  profile: PropTypes.string,\n  character: PropTypes.string.isRequired,\n};\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"CastList_cast__zZp6c\",\"sorry\":\"CastList_sorry__ZW-76\"};","import PropTypes from 'prop-types';\nimport CastItem from 'components/CastList/CastItem/CastItem';\nimport styles from './CastList.module.css';\n\nconst CastList = ({ credits }) => {\n  return (\n    <ul className={styles.cast}>\n      {credits.length > 0 ? (\n        credits.map(({ id, name, profile_path, character }) => (\n          <CastItem\n            key={id}\n            id={id}\n            name={name}\n            profile={profile_path}\n            character={character}\n          />\n        ))\n      ) : (\n        <p className={styles.sorry}>Sorry, something goes wrong.</p>\n      )}\n    </ul>\n  );\n};\n\nCastList.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default CastList;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport CastList from 'components/CastList/CastList';\nimport * as moviesApi from 'services/movies-api';\n\nexport default function Cast() {\n  const currentMovieId = useParams();\n  const idMovie = Number(currentMovieId.movieId);\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    moviesApi\n      .getCurrentFilmCredits(idMovie)\n      .then(response => setCredits(response.cast))\n      .catch(error => setError(error));\n  }, [idMovie]);\n  return (\n    <>\n      <CastList credits={credits} />\n      {error && <h2>Sorry, something went wrong: {error.message}</h2>}\n    </>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=221ed015def0321f18a85f3fc7b4d6fa';\nasync function fetchWithErrorHandlling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Page not found :('));\n}\nexport function getTrendingFilms(currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/trending/movie/day?${API_KEY}&page=${currentPage}`,\n  );\n}\nexport function getCurrentFilm(movieId) {\n  return fetchWithErrorHandlling(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n}\nexport function getCurrentFilmCredits(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`,\n  );\n}\nexport function getReviews(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}`,\n  );\n}\nexport function getSearchFilm(value, currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${value}&page=${currentPage}&include_adult=false`,\n  );\n}\n"],"names":["name","profile","character","className","styles","src","alt","defaultImgActor","credits","length","map","id","profile_path","Cast","currentMovieId","useParams","idMovie","Number","movieId","useState","setCredits","error","setError","useEffect","moviesApi","then","response","cast","catch","message","BASE_URL","API_KEY","fetchWithErrorHandlling","url","config","fetch","ok","json","Promise","reject","Error","getTrendingFilms","currentPage","getCurrentFilm","getCurrentFilmCredits","getReviews","getSearchFilm","value"],"sourceRoot":""}