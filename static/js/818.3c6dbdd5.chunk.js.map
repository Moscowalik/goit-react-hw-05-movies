{"version":3,"file":"static/js/818.3c6dbdd5.chunk.js","mappings":"kNACA,EAAyB,4BAAzB,EAA8D,4B,SCgB9D,EAdoB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC7B,OACE,gBAAIC,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,cAAgCH,MAChC,uBAAIC,QCNV,EAA0B,6BAA1B,EAA+D,2BC2B/D,EAzBoB,SAAC,GAAiB,IAAfG,EAAc,EAAdA,QACrB,OACE,+BACE,eAAIF,UAAWC,EAAf,SACGC,IACEA,EAAQC,OAAS,EAChBD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIP,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,SAAC,EAAD,CAAsBM,GAAIA,EAAIP,OAAQA,EAAQC,QAASA,GAArCM,OAGpB,cAAGL,UAAWC,EAAd,6D,SCRG,SAASK,IACtB,IAAMC,GAAiBC,EAAAA,EAAAA,MACjBC,EAAUC,OAAOH,EAAeI,SACtC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KAOA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACcN,GACXO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,YAC7BC,OAAM,SAAAC,GAAK,OAAIA,OACjB,CAACX,KAEF,+BACE,SAAC,EAAD,CAAaP,QAASA,Q,oLCjBtBmB,EAAW,+BACXC,EAAU,2CAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAuCC,EAAvC,+BAA6C,GAAIC,EAAjD,+BAA0D,GAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,0BAJ/B,2GAMO,SAASC,EAAiBC,GAC/B,OAAOX,EAAwB,GAAD,OACzBF,EADyB,+BACMC,EADN,iBACsBY,IAG/C,SAASC,EAAexB,GAC7B,OAAOY,EAAwB,GAAD,OAAIF,EAAJ,kBAAsBV,EAAtB,YAAiCW,IAE1D,SAASc,EAAsBzB,GACpC,OAAOY,EAAwB,GAAD,OACzBF,EADyB,kBACPV,EADO,oBACYW,IAGrC,SAASe,EAAW1B,GACzB,OAAOY,EAAwB,GAAD,OACzBF,EADyB,kBACPV,EADO,oBACYW,IAGrC,SAASgB,EAAcC,EAAOL,GACnC,OAAOX,EAAwB,GAAD,OACzBF,EADyB,yBACAC,EADA,iCACgCiB,EADhC,iBAC8CL,EAD9C","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewsList/ReviewsItem/ReviewsItem.module.css?17f4","components/ReviewsList/ReviewsItem/ReviewsItem.jsx","webpack://goit-react-hw-05-movies/./src/components/ReviewsList/ReviewsList.module.css?071b","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"review\":\"ReviewsItem_review__MXbu1\",\"author\":\"ReviewsItem_author__FZoMo\"};","import PropTypes from 'prop-types';\nimport styles from './ReviewsItem.module.css';\n\nconst ReviewsItem = ({ author, content }) => {\n  return (\n    <li className={styles.review}>\n      <h3 className={styles.author}> {author}</h3>\n      <p>{content}</p>\n    </li>\n  );\n};\n\nReviewsItem.propTypes = {\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n\nexport default ReviewsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"ReviewsList_reviews__bDSJU\",\"sorry\":\"ReviewsList_sorry__S57iQ\"};","import PropTypes from 'prop-types';\nimport ReviewsItem from 'components/ReviewsList/ReviewsItem/ReviewsItem';\nimport styles from './ReviewsList.module.css';\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      <ul className={styles.reviews}>\n        {reviews &&\n          (reviews.length > 0 ? (\n            reviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id} id={id} author={author} content={content} />\n            ))\n          ) : (\n            <p className={styles.sorry}>\n              We don't have any reviews for this movie.\n            </p>\n          ))}\n      </ul>\n    </>\n  );\n};\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ReviewsList;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\nimport * as moviesApi from 'services/movies-api';\n\nexport default function Reviews() {\n  const currentMovieId = useParams();\n  const idMovie = Number(currentMovieId.movieId);\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    moviesApi\n      .getReviews(idMovie)\n      .then(resp => setReviews(resp.results))\n      .catch(error => error);\n  }, [idMovie]);\n  return (\n    <>\n      <ReviewsList reviews={reviews} />\n    </>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=221ed015def0321f18a85f3fc7b4d6fa';\nasync function fetchWithErrorHandlling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('404 Page not found :('));\n}\nexport function getTrendingFilms(currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/trending/movie/day?${API_KEY}&page=${currentPage}`,\n  );\n}\nexport function getCurrentFilm(movieId) {\n  return fetchWithErrorHandlling(`${BASE_URL}/movie/${movieId}?${API_KEY}`);\n}\nexport function getCurrentFilmCredits(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`,\n  );\n}\nexport function getReviews(movieId) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}`,\n  );\n}\nexport function getSearchFilm(value, currentPage) {\n  return fetchWithErrorHandlling(\n    `${BASE_URL}/search/movie?${API_KEY}&language=en-US&query=${value}&page=${currentPage}&include_adult=false`,\n  );\n}\n"],"names":["author","content","className","styles","reviews","length","map","id","Reviews","currentMovieId","useParams","idMovie","Number","movieId","useState","setReviews","useEffect","moviesApi","then","resp","results","catch","error","BASE_URL","API_KEY","fetchWithErrorHandlling","url","config","fetch","response","ok","json","Promise","reject","Error","getTrendingFilms","currentPage","getCurrentFilm","getCurrentFilmCredits","getReviews","getSearchFilm","value"],"sourceRoot":""}